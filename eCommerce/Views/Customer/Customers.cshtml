@using eCommerce.Models;
@model Customer; 

@{
    ViewData["Title"] = "Customer Page";
}

@Html.Partial("HeaderLinks")


<h2>Add a New Customer</h2>

    <div class="col-md-10">
        <!-- <form action="createCustomer" class="form-control" method="post"> -->
            
                <label>Name the Customer</label>
                    <form asp-controller="Customer" asp-action="createCustomer" method="post">
                        <div class="form-group">
                            <label asp-for="Name"></label>
                            <input asp-for="Name" class="form-control">
                        </div>
                        <div class="form-group">
                            <input class="ordbtn btn btn-primary" type="submit" value="Create Customer">
                        </div>
                    </form>
    </div>

            
              @{  
                  if(TempData != null)
                    {
                    if(TempData.ContainsKey("DuplicateCustomer"))
                        {                    
                        <p class="text-danger font-weight-bold">@TempData["DuplicateCustomer"]</p>
                        }
                    }                  
                }
        
    <table>
        <tr>
            <th>Customer Name</th>
            <th>Created Date</th>
            <th>Formatted Date</th>
            <th>Actions</th>            
        </tr>
        @foreach(var customer in ViewBag.AllCustomers)
        {
        <tr>
            <td>
                @customer.Name
            </td>
            <td>
                @customer.CustomerDate
            </td>
            <td>
                @{
                    DateTime myformatting = customer.CustomerDate;
                    string postFormat = "MMMM dd yyyy";
                    var postformatted = myformatting.ToString(postFormat);

                    long ForOrdinals = long.Parse(myformatting.ToString("dd"));

                    string postFormatMonth = "MMMM";
                    var postformattedMonth = myformatting.ToString(postFormatMonth);

                    string postFormatYear = "yyyy";
                    var postformattedYear = myformatting.ToString(postFormatYear);

                    if (ForOrdinals <= 0 ){
                        @ForOrdinals.ToString();                        
                    } 
                    

                    switch(ForOrdinals % 100)
                    {
                        case 11:
                        case 12:
                        case 13:

                        var FinalFormat = ForOrdinals + "th" +" ";
                        @FinalFormat
                        break;
                    }
                    

                    switch(ForOrdinals % 10)
                    {
                        case 1:
                            var FinalFormat = postformattedMonth + " " + ForOrdinals + "st" +" "+ postformattedYear;
                            @FinalFormat;                            
                            break;
                        case 2:
                            var FinalFormat2 = postformattedMonth +" "+ ForOrdinals + "nd"+" "+ postformattedYear;
                            @FinalFormat2;                        
                            break;
                        case 3:                                    
                            var FinalFormat3 = postformattedMonth +" "+ ForOrdinals + "rd" +" "+ postformattedYear;
                            @FinalFormat3;                            
                            break;
                        default:
                            var FinalFormat4 = postformattedMonth +" "+ ForOrdinals + "th" +" "+ postformattedYear;
                            @FinalFormat4;               
                            break;
                        
                    }  

                }
                          
            </td>
            <td>                                
                <form action="/removeCustomer/@customer.CustomerID " method=post>
					<input type=submit value="Remove">
				</form>
            </td>
        
        </tr>
        }    
    </table>        

    <!-- 
        attempt with ViewData. no point this persists after a return, however issue wasn't this
        ViewData["Title"] = "Customer Page";

        <table>
        <tr>
            <th>Customer Name</th>
            <th>Created Date</th>
            <th>Formatted Date</th>
            <th>Actions</th>            
        </tr>
        xforeach(var customer in ViewData["th"] as List <Customer>)
        {

        <tr>
            <td>
                xcustomer.Name
            </td>
            
            <td>
                xcustomer.CustomerDate
            </td>

            <td>
                xViewBag.postformatted
            </td>
        </tr>
        }    
    </table>    -->